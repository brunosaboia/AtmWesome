[1mdiff --git a/Coinify.Web/Controllers/CoinsController.cs b/Coinify.Web/Controllers/CoinsController.cs[m
[1mindex e2d1717..d4207e7 100644[m
[1m--- a/Coinify.Web/Controllers/CoinsController.cs[m
[1m+++ b/Coinify.Web/Controllers/CoinsController.cs[m
[36m@@ -13,6 +13,10 @@[m [mnamespace Coinify.Web.Controllers[m
     {[m
         private readonly CoinifyWebContext _context;[m
 [m
[32m+[m[32m        public CoinsController(CoinifyWebContext context)[m
[32m+[m[32m        {[m
[32m+[m[32m            _context = context;[m
[32m+[m[32m        }[m
         private async Task<IEnumerable<SelectListItem>> GetCoinSizes()[m
         {[m
             var sizes = await _context.CoinSize.ToListAsync();[m
[36m@@ -27,11 +31,6 @@[m [mnamespace Coinify.Web.Controllers[m
             return new SelectList(model, "Value", "Text");[m
         }[m
 [m
[31m-        public CoinsController(CoinifyWebContext context)[m
[31m-        {[m
[31m-            _context = context;[m
[31m-        }[m
[31m-[m
         // GET: Coins[m
         public async Task<IActionResult> Index()[m
         {[m
[1mdiff --git a/Coinify.Web/Models/ViewModels/WithdrawViewModel.cs b/Coinify.Web/Models/ViewModels/WithdrawViewModel.cs[m
[1mindex bdf71e6..8fa9f93 100644[m
[1m--- a/Coinify.Web/Models/ViewModels/WithdrawViewModel.cs[m
[1m+++ b/Coinify.Web/Models/ViewModels/WithdrawViewModel.cs[m
[36m@@ -1,4 +1,5 @@[m
 ï»¿using System;[m
[32m+[m[32musing System.ComponentModel.DataAnnotations;[m
 [m
 namespace Coinify.Web.Models.ViewModels[m
 {[m
[36m@@ -7,7 +8,19 @@[m [mnamespace Coinify.Web.Models.ViewModels[m
         public int WithdrawId { get; set; }[m
         public int Amount { get; set; }[m
         public DateTime WithdrawDate  { get; set; }[m
[31m-        public int AutomatedTellerMachineId { get; set; }[m
[32m+[m[32m        [Display(Name = "Select ATM")][m
[32m+[m[32m        public int AtmId { get; set; }[m
[32m+[m[32m        [Display(Name = "Select User")][m
         public int UserId { get; set; }[m
[32m+[m
[32m+[m[32m        public Withdraw ToModel(CoinifyWebContext context)[m
[32m+[m[32m        {[m
[32m+[m[32m            return new Withdraw()[m
[32m+[m[32m            {[m
[32m+[m[32m                WithdrawId = WithdrawId,[m
[32m+[m[32m                User = context.User.Find(UserId),[m
[32m+[m[32m                AutomatedTellerMachine = context.AutomatedTellerMachine.Find(AtmId),[m
[32m+[m[32m            };[m
[32m+[m[32m        }[m
     }[m
 }[m
[1mdiff --git a/Coinify.Web/Models/WithdrawsController.cs b/Coinify.Web/Models/WithdrawsController.cs[m
[1mdeleted file mode 100644[m
[1mindex 965d72b..0000000[m
[1m--- a/Coinify.Web/Models/WithdrawsController.cs[m
[1m+++ /dev/null[m
[36m@@ -1,151 +0,0 @@[m
[31m-using System;[m
[31m-using System.Collections.Generic;[m
[31m-using System.Linq;[m
[31m-using System.Threading.Tasks;[m
[31m-using Microsoft.AspNetCore.Mvc;[m
[31m-using Microsoft.AspNetCore.Mvc.Rendering;[m
[31m-using Microsoft.EntityFrameworkCore;[m
[31m-[m
[31m-namespace Coinify.Web.Models[m
[31m-{[m
[31m-    public class WithdrawsController : Controller[m
[31m-    {[m
[31m-        private readonly CoinifyWebContext _context;[m
[31m-[m
[31m-        public WithdrawsController(CoinifyWebContext context)[m
[31m-        {[m
[31m-            _context = context;    [m
[31m-        }[m
[31m-[m
[31m-        // GET: Withdraws[m
[31m-        public async Task<IActionResult> Index()[m
[31m-        {[m
[31m-            return View(await _context.Withdraw.ToListAsync());[m
[31m-        }[m
[31m-[m
[31m-        // GET: Withdraws/Details/5[m
[31m-        public async Task<IActionResult> Details(int? id)[m
[31m-        {[m
[31m-            if (id == null)[m
[31m-            {[m
[31m-                return NotFound();[m
[31m-            }[m
[31m-[m
[31m-            var withdraw = await _context.Withdraw[m
[31m-                .SingleOrDefaultAsync(m => m.WithdrawId == id);[m
[31m-            if (withdraw == null)[m
[31m-            {[m
[31m-                return NotFound();[m
[31m-            }[m
[31m-[m
[31m-            return View(withdraw);[m
[31m-        }[m
[31m-[m
[31m-        // GET: Withdraws/Create[m
[31m-        public IActionResult Create()[m
[31m-        {[m
[31m-            return View();[m
[31m-        }[m
[31m-[m
[31m-        // POST: Withdraws/Create[m
[31m-        // To protect from overposting attacks, please enable the specific properties you want to bind to, for [m
[31m-        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.[m
[31m-        [HttpPost][m
[31m-        [ValidateAntiForgeryToken][m
[31m-        public async Task<IActionResult> Create([Bind("WithdrawId,WithdrawDate")] Withdraw withdraw)[m
[31m-        {[m
[31m-            if (ModelState.IsValid)[m
[31m-            {[m
[31m-                _context.Add(withdraw);[m
[31m-                await _context.SaveChangesAsync();[m
[31m-                return RedirectToAction("Index");[m
[31m-            }[m
[31m-            return View(withdraw);[m
[31m-        }[m
[31m-[m
[31m-        // GET: Withdraws/Edit/5[m
[31m-        public async Task<IActionResult> Edit(int? id)[m
[31m-        {[m
[31m-            if (id == null)[m
[31m-            {[m
[31m-                return NotFound();[m
[31m-            }[m
[31m-[m
[31m-            var withdraw = await _context.Withdraw.SingleOrDefaultAsync(m => m.WithdrawId == id);[m
[31m-            if (withdraw == null)[m
[31m-            {[m
[31m-                return NotFound();[m
[31m-            }[m
[31m-            return View(withdraw);[m
[31m-        }[m
[31m-[m
[31m-        // POST: Withdraws/Edit/5[m
[31m-        // To protect from overposting attacks, please enable the specific properties you want to bind to, for [m
[31m-        // more details see http://go.microsoft.com/fwlink/?LinkId=317598.[m
[31m-        [HttpPost][m
[31m-        [ValidateAntiForgeryToken][m
[31m-        public async Task<IActionResult> Edit(int id, [Bind("WithdrawId,WithdrawDate")] Withdraw withdraw)[m
[31m-        {[m
[31m-            if (id != withdraw.WithdrawId)[m
[31m-            {[m
[31m-                return NotFound();[m
[31m-            }[m
[31m-[m
[31m-            if (ModelState.IsValid)[m
[31m-            {[m
[31m-                try[m
[31m-                {[m
[31m-                    _context.Update(withdraw);[m
[31m-                    await _context.SaveChangesAsync();[m
[31m-                }[m
[31m-                catch (DbUpdateConcurrencyException)[m
[31m-                {[m
[31m-                    if (!WithdrawExists(withdraw.WithdrawId))[m
[31m-                    {[m
[31m-                        return NotFound();[m
[31m-                    }[m
[31m-                    else[m
[31m-                    {[m
[31m-                        throw;[m
[31m-                    }[m
[31m-                }[m
[31m-                return RedirectToAction("Index");[m
[31m-            }[m
[31m-            return View(withdraw);[m
[31m-        }[m
[31m-[m
[31m-        // GET: Withdraws/Delete/5[m
[31m-        public async Task<IActionResult> Delete(int? id)[m
[31m-        {[m
[31m-            if (id == null)[m
[31m-            {[m
[31m-                return NotFound();[m
[31m-            }[m
[31m-[m
[31m-            var withdraw = await _context.Withdraw[m
[31m-                .SingleOrDefaultAsync(m => m.WithdrawId == id);[m
[31m-            if (withdraw == null)[m
[31m-            {[m
[31m-                return NotFound();[m
[31m-            }[m
[31m-[m
[31m-            return View(withdraw);[m
[31m-        }[m
[31m-[m
[31m-        // POST: Withdraws/Delete/5[m
[31m-        [HttpPost, ActionName("Delete")][m
[31m-        [ValidateAntiForgeryToken][m
[31m-        public async Task<IActionResult> DeleteConfirmed(int id)[m
[31m-        {[m
[31m-            var withdraw = await _context.Withdraw.SingleOrDefaultAsync(m => m.WithdrawId == id);[m
[31m-            _context.Withdraw.Remove(withdraw);[m
[31m-            await _context.SaveChangesAsync();[m
[31m-            return RedirectToAction("Index");[m
[31m-        }[m
[31m-[m
[31m-        private bool WithdrawExists(int id)[m
[31m-        {[m
[31m-            return _context.Withdraw.Any(e => e.WithdrawId == id);[m
[31m-        }[m
[31m-    }[m
[31m-}[m
[1mdiff --git a/Coinify.Web/Properties/launchSettings.json b/Coinify.Web/Properties/launchSettings.json[m
[1mindex ea8c5af..532b299 100644[m
[1m--- a/Coinify.Web/Properties/launchSettings.json[m
[1m+++ b/Coinify.Web/Properties/launchSettings.json[m
[36m@@ -3,8 +3,8 @@[m
     "windowsAuthentication": false,[m
     "anonymousAuthentication": true,[m
     "iisExpress": {[m
[31m-      "applicationUrl": "http://localhost:4138/",[m
[31m-      "sslPort": 0[m
[32m+[m[32m      "applicationUrl": "https://localhost:44316/",[m
[32m+[m[32m      "sslPort": 44316[m
     }[m
   },[m
   "profiles": {[m
[36m@@ -24,4 +24,4 @@[m
       "applicationUrl": "http://localhost:4139/"[m
     }[m
   }[m
[31m-}[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/Coinify.Web/Views/Coins/Create.cshtml b/Coinify.Web/Views/Coins/Create.cshtml[m
[1mindex 4abec10..7b8bafc 100644[m
[1m--- a/Coinify.Web/Views/Coins/Create.cshtml[m
[1m+++ b/Coinify.Web/Views/Coins/Create.cshtml[m
[36m@@ -4,7 +4,7 @@[m
     ViewData["Title"] = "Create";[m
 }[m
 [m
[31m-<h2>Create</h2>[m
[32m+[m[32m<h2>Create Coin</h2>[m
 [m
 <form asp-action="Create">[m
     <div class="form-horizontal">[m
[36m@@ -18,7 +18,6 @@[m
                 <span asp-validation-for="Value" class="text-danger"></span>[m
             </div>[m
         </div>[m
[31m-        <div asp-validation-summary="ModelOnly" class="text-danger"></div>[m
         <div class="form-group">[m
             <label asp-for="Size" class="col-md-2 control-label"></label>[m
             <div class="col-md-10">[m
[1mdiff --git a/Coinify.Web/Views/Withdraws/Create.cshtml b/Coinify.Web/Views/Withdraws/Create.cshtml[m
[1mindex 01fef65..e6c15d9 100644[m
[1m--- a/Coinify.Web/Views/Withdraws/Create.cshtml[m
[1m+++ b/Coinify.Web/Views/Withdraws/Create.cshtml[m
[36m@@ -1,7 +1,7 @@[m
[31m-@model Coinify.Web.Models.Withdraw[m
[32m+[m[32m@model Coinify.Web.Models.ViewModels.WithdrawViewModel[m
 [m
 @{[m
[31m-    ViewData["Title"] = "Create";[m
[32m+[m[32m    ViewData["Title"] = "Create Withdraw Operation";[m
 }[m
 [m
 <h2>Create</h2>[m
[36m@@ -12,10 +12,26 @@[m
         <hr />[m
         <div asp-validation-summary="ModelOnly" class="text-danger"></div>[m
         <div class="form-group">[m
[31m-            <label asp-for="WithdrawDate" class="col-md-2 control-label"></label>[m
[32m+[m[32m            <label asp-for="Amount" class="col-md-2 control-label"></label>[m
             <div class="col-md-10">[m
[31m-                <input asp-for="WithdrawDate" class="form-control" />[m
[31m-                <span asp-validation-for="WithdrawDate" class="text-danger"></span>[m
[32m+[m[32m                <input asp-for="Amount" class="form-control" />[m
[32m+[m[32m                <span asp-validation-for="Amount" class="text-danger"></span>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="form-group">[m
[32m+[m[32m            <label asp-for="UserId" class="col-md-2 control-label"></label>[m
[32m+[m[32m            <div class="col-md-10">[m
[32m+[m[32m                <select asp-for="UserId" asp-items="ViewBag.Users" class="form-control"></select>[m
[32m+[m[32m                <span asp-validation-for="UserId" class="text-danger"></span>[m
[32m+[m[32m                <a asp-controller="Users" asp-action="Create">Create New User</a>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div class="form-group">[m
[32m+[m[32m            <label asp-for="AtmId" class="col-md-2 control-label"></label>[m
[32m+[m[32m            <div class="col-md-10">[m
[32m+[m[32m                <select asp-for="AtmId" asp-items="ViewBag.Atms" class="form-control"></select>[m
[32m+[m[32m                <span asp-validation-for="AtmId" class="text-danger"></span>[m
[32m+[m[32m                <a asp-controller="Users" asp-action="Create">Create New User</a>[m
             </div>[m
         </div>[m
         <div class="form-group">[m
